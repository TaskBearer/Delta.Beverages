@using Microsoft.AspNetCore.Http
@model HomeViewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    // Model.SKURuns.AddRange(Model.SKURuns);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/Style.css">
    <style>
        /* Scrollable flex container for shapes */
        .shape-row {
            display: flex;
            gap: 20px; /* Space between shapes */
            overflow-x: auto; /* Enables horizontal scrolling */
            padding: 10px; /* Optional padding for scrollbar clearance */
            max-width: 100vw; /* Limits width to viewport */
            height: auto;
        }

        /* Rectangle with triangle and centered text */
        .shape-container-inactive {
            position: relative;
            width: 180px; /* Adjust width as needed */
            height: 130px; /* Adjust height as needed */
            background-color: white;
            color: black;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 16px;
            font-family: Arial, sans-serif;
            text-align: center;
            flex-shrink: 0;
        }

        /* Rectangle with triangle and centered text */
        .shape-container-active {
            position: relative;
            width: 180px; /* Adjust width as needed */
            height: 130px; /* Adjust height as needed */
            background-color: black;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 16px;
            font-family: Arial, sans-serif;
            text-align: center;
            flex-shrink: 0;
        }

        /* Triangle at the bottom center */
        .shape-container-active::after {
            content: "";
            position: absolute;
            bottom: -10px; /* Adjusts the triangle position */
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            height: 0;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-top: 15px solid black;
        }

        .runs-header {
            padding-top: 12px;
            padding-left: 37px;
        }

        .runs {
            display: flex;
            flex-direction: row; /* Stack the add button and shapes row */
            gap: 10px; /* Space between sections */
            position: relative;
            flex-wrap: nowrap;
        }

        .add-run-section {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            position: relative;
        }

        .add-run {
            background-color: #4caf50;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2em;
            width: 50px;
            height: 50px;
            border-radius: 8px;
            cursor: pointer;
            flex-shrink: 0;
            position: relative;
            z-index: 1; /* Ensure it appears above the shapes */
        }

        .scrollable-shapes {
            overflow-x: auto; /* Enable horizontal scrolling for the shapes */
            width: 100%; /* Use full width */
        }

        /* Container for shapes and buttons */
        .scrollable-container {
            display: flex;
            align-items: center;
            position: relative;
            width: 100%;
        }

        /* Buttons for scrolling */
        .scroll-btn {
            background-color: #4caf50;
            color: white;
            border: none;
            width: 25px;
            height: 130px; /* Match the height of shapes */
            cursor: pointer;
            font-size: 1.5em;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            z-index: 1;
        }

        .left-btn {
            margin-right: 10px;
            width: 40px;
        }

        .right-btn {
            margin-left: 10px;
            width: 40px;
        }

        /* Scrollable row */
        .shape-row {
            display: flex;
            gap: 20px; /* Space between shapes */
            overflow: hidden; /* Hide overflow content */
            scroll-behavior: smooth; /* Smooth scrolling */
            flex-shrink: 0;
            width: 100%; /* Take up full container width */
            padding: 10px 0;
            width: 85%;
            margin-left: 20px;
        }
    </style>
</head>
<body>
    <section class="header-section">
        <div class="logo-div">
            <a asp-area="" asp-controller="Home" asp-action="Index"><br />
                <img class="logo" src="~/img/Logo.jfif" />
            </a>            
        </div>
        <div style="background-color: grey;width: 1px;height: 100%;"></div>
        <img class="group" src="img/Group.svg" />
        <select id="ddlUser" class="user-dropdwon" onchange="SetUser()">
            @foreach (var row in Model.AllUsers)
            {
                var selectedUser = HttpContextAccessor.HttpContext.Session.GetString("user") == @row.ID;
                <option value="@row.ID" selected='@selectedUser'>@row.Name</option>
            }
        </select>
    </section>

    <section class="runs-section">
        <div class="runs-header">
            <h2><b>RUNS (IN THE PAST 24H)</b></h2>
        </div>
        <div class="runs">
            <!-- Add Button Section -->
            <div class="add-run-section">
                <div class="add-run" onclick="ClearData()">
                    <img src="~/img/Plus.svg" alt="Add">
                </div>
            </div>

            <!-- Scrollable Shapes with Navigation -->
            <div class="scrollable-container">
                <button class="scroll-btn left-btn" onclick="scrollToLeft()">&#9664;</button>
                <div class="shape-row">
                    @foreach (var sku in Model.SKURuns)
                    {
                        var id = "div-run-" + sku.ID;
                        var lblId = "lbl-run-" + sku.ID;
                        <div id='@id' class="shape-container-inactive" onclick="OnRunsClick('@sku.ID')">
                            <b><label id='@lblId'>@Html.Raw(sku.ToString()) </label></b>
                        </div>
                    }
                </div>
                <button class="scroll-btn right-btn" onclick="scrollToRight()">&#9654;</button>
            </div>
        </div>
    </section>

    <section class="run-details">
        <div class="runs-header">
            <h2><b>RUNS DETAILS</b></h2>
        </div>
        <div class="details-row">
            <select id="ddlSKUId" name="ID" class="input-sku-select" onchange="SKUChanged(this);" disabled>
                <option value="0">Select SKU</option>
                @foreach (var row in Model.AllSKUs)
                {
                    <option value="@row.ID">@row.Name</option>
                }
            </select>
            <input type="text" id="txtDesc" value="" class="input-sku-desc" disabled>
            <select id="ddlLine" class="input-sku-line" disabled>
                <option value="0">Select Line</option>
                <option value="1">Line 1</option>
                <option value="2">Line 2</option>
            </select>
            <select id="ddlShift" class="input-sku-shift" disabled>
                <option value="0">Select Shift</option>
                <option value="1">Shift 1</option>
                <option value="2">Shift 2</option>
            </select>
        </div>
        <div class="controls">
            <div class="rectangle-inactive" onclick="StartRun()" id="divStart">
                <div class="text-wrapper" id="lblStartRun">START RUN</div>
                <div class="rectangle-start-run"><img class="vector-run" src="~/img/Vector 7.svg" /></div>
            </div>
            <div class="rectangle-inactive" onclick="EditRun()" id="divEdit">
                <div class="text-wrapper">EDIT RUN</div>
                <div class="rectangle-edit-run"><img class="vector-run" src="~/img/Drop down icon 1.svg" /></div>
            </div>
            <div class="rectangle-inactive" onclick="ShowEndProduction()" id="divEnd">
                <div class="text-wrapper">END PRODUCTION</div>
                <div class="rectangle-end-production">
                    <div class="rectangle-end-prod"></div>
                </div>
            </div>
            <div class="total-run-count">
                <b><span>TOTAL RUN COUNT: <label id="lblTotalCount" style="width:25px"></label></span></b>
                <input type="hidden" id="hdnRunId" />
            </div>
        </div>        
    </section>

    <section class="runs-add-section">
        <button id="btnAddRun" class="add-run-main" onclick="AddRun()" disabled><b>Add Run</b></button>
    </section>

    <div class="modal" id="modalValidation">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal()">&times;</span>
            <div>
                <p id="idMsg"></p>
                <button class="open-modal-btn" onclick="closeModal()">Ok</button>
            </div>            
        </div>
    </div>
    <div class="modal" id="modalEndProduction">
        <div class="modal-content">
            <p>Do you want to End Production?</p>
            <div style="margin-top: 100px;">
            <button class="open-modal-btn-ok" onclick="EndProduction()">Ok</button>
            <button class="open-modal-btn-cancel" onclick="HidEndProduction()">Cancel</button>
            </div>
        </div>
    </div>
</body>
</html>

<script type="text/javascript">
    function scrollToLeft() {
        const shapeRow = document.querySelector('.shape-row');
        shapeRow.scrollBy({ left: -200, behavior: 'smooth' }); // Adjust -200 for scroll step size
    }

    function scrollToRight() {
        const shapeRow = document.querySelector('.shape-row');
        shapeRow.scrollBy({ left: 200, behavior: 'smooth' }); // Adjust 200 for scroll step size
    }

    function updateButtons() {
        const shapeRow = document.querySelector('.shape-row');
        const leftBtn = document.querySelector('.left-btn');
        const rightBtn = document.querySelector('.right-btn');
        
        if(shapeRow.scrollLeft === 0)
        {
            leftBtn.style = 'Display:none';
        }
        else{
            leftBtn.style = 'Display:block';
        }

        if((shapeRow.scrollLeft + shapeRow.offsetWidth) >= shapeRow.scrollWidth)
        {
            rightBtn.style = 'Display:none';
        }
        else{
            rightBtn.style = 'Display:block';
        }

        // leftBtn.disabled = shapeRow.scrollLeft === 0;
        // rightBtn.disabled = shapeRow.scrollLeft + shapeRow.offsetWidth >= shapeRow.scrollWidth;
    }

    document.querySelector('.shape-row').addEventListener('scroll', updateButtons);
    window.onload = updateButtons;

    // Close the modal when clicking outside the modal content
    window.onclick = function(event) {
        let modal = document.getElementById("modalValidation");
        if (event.target === modal) {
        modal.style.display = "none";
        }
    }

    function closeModal() {
        document.getElementById("modalValidation").style.display = "none";
    }

    function OnRunsClick(selectedLine) {
        $("#hdnRunId").val(selectedLine);
        $(".runs").each(function () {            
            var activeDiv = $(this).find(".shape-container-active");
            activeDiv.removeClass("shape-container-active");
            activeDiv.addClass("shape-container-inactive");

            // var traingleDiv = $(activeDiv).find(".triangle-down");
            // traingleDiv.removeClass("triangle-down");
        });

        var id = '#div-run-' + selectedLine;
        $(id).removeClass("shape-container-inactive");
        $(id).addClass("shape-container-active");

        // var traingleId = '#div-triangle-run-' + selectedLine;
        // $(traingleId).addClass("triangle-down");

        $("#btnAddRun").prop("disabled", true);

        $.ajax({
            type: "GET",
            url: "/Home/GetRunDetails",
            data: {
                selectedLine: selectedLine
            },
            success: function (response) {
                
                $("#ddlSKUId").val(response.skuId);
                $("#txtDesc").val(response.description);
                $("#ddlLine").val(response.selectedLine);
                $("#ddlShift").val(response.selectedShift);
                $("#lblTotalCount").text(response.totalCount);
                if (response.endRunTimeStamp > '') {
                    $("#lblStartRun").text("MODIFY RUN DETAILS");
                }
                else {
                    if (response.isActive == 'True') {
                        $("#lblStartRun").text("MODIFY RUN DETAILS");
                    }
                    else {
                        $("#lblStartRun").text("START RUN");
                    }                    
                }
                if (response.isActive) { 
                    $("#btnStartRun").prop('disabled', true);
                    $("#btnEditRun").prop('disabled', false);
                    $("#btnEndRun").prop('disabled', false);
                }
                $("#divStart").removeClass("rectangle-inactive");
                $("#divStart").addClass("rectangle-active");

                $("#divEdit").removeClass("rectangle-inactive");
                $("#divEdit").addClass("rectangle-active");

                $("#divEnd").removeClass("rectangle-inactive");
                $("#divEnd").addClass("rectangle-active");

                $("#ddlSKUId").removeAttr("disabled");
                $("#ddlLine").removeAttr("disabled");
                $("#ddlShift").removeAttr("disabled");
            },
            error: function (response) {
               
            }
        })
    }

    function ClearData() { 
        $(".runs").each(function () {
            var activeDiv = $(this).find(".shape-container-active");
            activeDiv.removeClass("shape-container-active");
            activeDiv.addClass("shape-container-inactive");

            // var traingleDiv = $(activeDiv).find(".triangle-down");
            // traingleDiv.removeClass("triangle-down");
        });

        $("#ddlSKUId").val("0");
        $("#txtDesc").val("");
        $("#ddlLine").val("0");
        $("#ddlShift").val("0");
        $("#lblTotalCount").text("");
        $("#hdnRunId").val("");

        $("#ddlSKUId").removeAttr("disabled");
        $("#ddlLine").removeAttr("disabled");
        $("#ddlShift").removeAttr("disabled");
        $("#btnAddRun").removeAttr("disabled");

        $("#divStart").addClass("rectangle-inactive");
        $("#divStart").removeClass("rectangle-active");

        $("#divEdit").addClass("rectangle-inactive");
        $("#divEdit").removeClass("rectangle-active");

        $("#divEnd").addClass("rectangle-inactive");
        $("#divEnd").removeClass("rectangle-active");
    }

    function AddRun() {

        if($("#ddlSKUId").val() == "0")
        {
            $("#idMsg").text("Please select SKU");
            document.getElementById("modalValidation").style.display = "flex";
            $("#ddlSKUId").focus();
            return;
        }
        if($("#ddlLine").val() == "0")
        {
            $("#idMsg").text("Please select Line");
            document.getElementById("modalValidation").style.display = "flex";
            $("#ddlLine").focus();
            return;
        }
        if($("#ddlShift").val() == "0")
        {
            $("#idMsg").text("Please select Shift");
            document.getElementById("modalValidation").style.display = "flex";
            $("#ddlShift").focus();
            return;
        }
        $.ajax({
            type: "GET",
            url: "/Home/AddRun",
            data: {
                SKUID: $("#ddlSKUId").val(),
                SelectedLine: $("#ddlLine").val(),
                SelectedShift: $("#ddlShift").val(),
                SelectedUserID: $("#ddlUser").val()
            },
            success: function (response) {
                
                $("#ddlSKUId").val(response.skuId);
                $("#txtDesc").val(response.description);
                $("#ddlLine").val(response.selectedLine);
                $("#ddlShift").val(response.selectedShift);
                $("#lblTotalCount").text(response.totalCount);
                
                if (response.isActive) {
                    $("#btnStartRun").prop('disabled', true);
                    $("#btnEditRun").prop('disabled', false);
                    $("#btnEndRun").prop('disabled', false);
                }
                location.reload();
            },
            error: function (response) {

            }
        })
    }

    function ShowEndProduction()
    {
        if($("#hdnRunId").val() == "")
        {
            return;
        }
        document.getElementById("modalEndProduction").style.display = "flex";
    }

    function HidEndProduction()
    {
        document.getElementById("modalEndProduction").style.display = "none";
    }

    function EndProduction() {         
        $.ajax({
            type: "GET",
            url: "/Home/EndProduction",
            success: function (response) {
                HidEndProduction();
            },
            error: function (response) {

            }
        })
    }

    function StartRun() {
        if($("#hdnRunId").val() == "")
        {
            return;
        }
        $.ajax({
            type: "GET",
            url: "/Home/StartRun",
            data: {
                selectedRunID: $("#hdnRunId").val()
            },
            success: function (response) {
                window.location.href = "/RunDetails/Index?flag=EditRuns&RunsId=" + $("#hdnRunId").val();
            },
            error: function (response) {

            }
        })
    }

    function EditRun() {
        if($("#hdnRunId").val() == "")
        {
            return;
        }
        $.ajax({
            type: "GET",
            url: "/Home/EditRun",
            data: {
                selectedRunID: $("#hdnRunId").val(),
                SKUID: $("#ddlSKUId").val(),
                SelectedLine: $("#ddlLine").val(),
                SelectedShift: $("#ddlShift").val(),
                SelectedUserID: $("#ddlUser").val()
            },            
            success: function (response) {
                debugger;
                var id = '#lbl-run-'+$("#hdnRunId").val();
                $(id).html(response);
                $("#idMsg").text("Data saved!!");
                document.getElementById("modalValidation").style.display = "flex";
            },
            error: function (response) {

            }
        })
    }

    function SKUChanged(ddlSKU)
    {
        if(ddlSKU.value == "0")
        {
             $("#txtDesc").val("");
             $("#ddlLine").val("1");
             return;
        }
        $.ajax({
            type: "GET",
            url: "/Home/SKUChanged",
            data: {
                SKUID: ddlSKU.value
            },
            success: function (response) {
                $("#txtDesc").val(response.description);
                $("#ddlLine").val(response.line);
            },
            error: function (response) {

            }
        })
    }

    function SetUser()
    {
        $.ajax({
            type: "GET",
            url: "/Home/SetUser",
            data: {
                UserId: $("#ddlUser").val()
            },
            success: function (response) {
            },
            error: function (response) {

            }
        })
    }
</script>
